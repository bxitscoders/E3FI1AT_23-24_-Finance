//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 29.11.2023 09:27:54
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

#nullable enable annotations
#nullable disable warnings

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

namespace Model
{

    /// <summary>
    /// There are no comments for Model.Possession in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Possession")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Possession : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Possession object.
        /// </summary>
        /// <param name="iD">Initial value of ID.</param>
        /// <param name="number">Initial value of Number.</param>
        /// <param name="accountFK">Initial value of AccountFK.</param>
        /// <param name="sharesFK">Initial value of SharesFK.</param>
        public static Possession CreatePossession(int iD, int number, int accountFK, int sharesFK)
        {
            Possession possession = new Possession();
            possession.ID = iD;
            possession.Number = number;
            possession.AccountFK = accountFK;
            possession.SharesFK = sharesFK;
            return possession;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ID
        {
            get
            {
                int value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private int _ID;
        partial void OnGetID(ref int value);
        partial void OnIDChanging(ref int value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for Number in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Number
        {
            get
            {
                int value = _Number;
                OnGetNumber(ref value);
                return value;
            }
            set
            {
                if (_Number != value)
                {
                  OnNumberChanging(ref value);
                  ReportPropertyChanging("Number");
                  _Number = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Number");
                  OnNumberChanged();
              }
            }
        }
        private int _Number;
        partial void OnGetNumber(ref int value);
        partial void OnNumberChanging(ref int value);
        partial void OnNumberChanged();
    
        /// <summary>
        /// There are no comments for AccountFK in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int AccountFK
        {
            get
            {
                int value = _AccountFK;
                OnGetAccountFK(ref value);
                return value;
            }
            set
            {
                if (_AccountFK != value)
                {
                  OnAccountFKChanging(ref value);
                  ReportPropertyChanging("AccountFK");
                  _AccountFK = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("AccountFK");
                  OnAccountFKChanged();
              }
            }
        }
        private int _AccountFK;
        partial void OnGetAccountFK(ref int value);
        partial void OnAccountFKChanging(ref int value);
        partial void OnAccountFKChanged();
    
        /// <summary>
        /// There are no comments for SharesFK in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int SharesFK
        {
            get
            {
                int value = _SharesFK;
                OnGetSharesFK(ref value);
                return value;
            }
            set
            {
                if (_SharesFK != value)
                {
                  OnSharesFKChanging(ref value);
                  ReportPropertyChanging("SharesFK");
                  _SharesFK = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SharesFK");
                  OnSharesFKChanged();
              }
            }
        }
        private int _SharesFK;
        partial void OnGetSharesFK(ref int value);
        partial void OnSharesFKChanging(ref int value);
        partial void OnSharesFKChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for Shares in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "possession_ibfk_1", "Shares")]
        public virtual Shares Shares
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Shares>("Model.possession_ibfk_1", "Shares").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Shares>("Model.possession_ibfk_1", "Shares").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Shares in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Shares> SharesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Shares>("Model.possession_ibfk_1", "Shares");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Shares>("Model.possession_ibfk_1", "Shares", value);
                }
                else
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Shares>("Model.possession_ibfk_1", "Shares").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for Account in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "possession_ibfk_2", "Account")]
        public virtual Account Account
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Account>("Model.possession_ibfk_2", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Account>("Model.possession_ibfk_2", "Account").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for Account in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Account>("Model.possession_ibfk_2", "Account");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<Account>("Model.possession_ibfk_2", "Account", value);
                }
                else
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<Account>("Model.possession_ibfk_2", "Account").Value = null;
                }
            }
        }

        #endregion
    }

}
