//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 13.11.2023 13:35:21
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

namespace Model
{

    /// <summary>
    /// There are no comments for Model.Aktienwert in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ID
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Aktienwert")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Aktienwert : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new Aktienwert object.
        /// </summary>
        /// <param name="iD">Initial value of ID.</param>
        /// <param name="wert">Initial value of Wert.</param>
        /// <param name="timeStamp">Initial value of TimeStamp.</param>
        public static Aktienwert CreateAktienwert(int iD, int wert, global::System.DateTime timeStamp)
        {
            Aktienwert aktienwert = new Aktienwert();
            aktienwert.ID = iD;
            aktienwert.Wert = wert;
            aktienwert.TimeStamp = timeStamp;
            return aktienwert;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int ID
        {
            get
            {
                int value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private int _ID;
        partial void OnGetID(ref int value);
        partial void OnIDChanging(ref int value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for Wert in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual int Wert
        {
            get
            {
                int value = _Wert;
                OnGetWert(ref value);
                return value;
            }
            set
            {
                if (_Wert != value)
                {
                  OnWertChanging(ref value);
                  ReportPropertyChanging("Wert");
                  _Wert = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Wert");
                  OnWertChanged();
              }
            }
        }
        private int _Wert;
        partial void OnGetWert(ref int value);
        partial void OnWertChanging(ref int value);
        partial void OnWertChanged();
    
        /// <summary>
        /// There are no comments for TimeStamp in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public virtual global::System.DateTime TimeStamp
        {
            get
            {
                global::System.DateTime value = _TimeStamp;
                OnGetTimeStamp(ref value);
                return value;
            }
            set
            {
                if (_TimeStamp != value)
                {
                  OnTimeStampChanging(ref value);
                  ReportPropertyChanging("TimeStamp");
                  _TimeStamp = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TimeStamp");
                  OnTimeStampChanged();
              }
            }
        }
        private global::System.DateTime _TimeStamp;
        partial void OnGetTimeStamp(ref global::System.DateTime value);
        partial void OnTimeStampChanging(ref global::System.DateTime value);
        partial void OnTimeStampChanged();

        #endregion
    }

}
